name: CI

on:
  push:
    branches: [master]
  pull_request: ~
  workflow_dispatch: ~

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        javaversion: ["8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK for compilation
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "22" # Always use the latest JDK for building
      - name: Load Maven dependencies cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-build${{ matrix.javaversion }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install dependencies
        run: make install
      - name: Build Library
        run: make build
      - name: Set up Java ${{ matrix.javaversion }}
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: ${{ matrix.javaversion }}
      - name: Run test with Java ${{ matrix.javaversion }}
        run: EASYPOST_TEST_API_KEY=123 EASYPOST_PROD_API_KEY=123 make test
  coverage:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK for compilation
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "22" # Always use the latest JDK for building
      - name: Load Maven dependencies cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-build-coverage-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install dependencies
        run: make install
      - name: Test coverage
        run: EASYPOST_TEST_API_KEY=123 EASYPOST_PROD_API_KEY=123 make coverage
      - name: Load Rust cache
        if: github.ref == 'refs/heads/master'
        uses: Swatinem/rust-cache@v2
      - name: Install grcov
        if: github.ref == 'refs/heads/master'
        run: cargo install grcov --version 0.8.13
      - name: Convert coverage report
        if: github.ref == 'refs/heads/master'
        run: grcov target/site/jacoco/jacoco.xml --source-dir ./ --ignore "target/*" > coverage.lcov
      - name: Coveralls
        if: github.ref == 'refs/heads/master'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "./coverage.lcov"
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Install style guide
        run: make install-styleguide
      - name: Load Maven dependencies and CVE database cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository # The CVE database is included in the Maven repository folder
          key: ${{ runner.os }}-maven-security-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Lint
        run: make lint
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
          name: DependencyCheck report
          path: ${{github.workspace}}/target/dependency-check-report.html
  docs:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK for compilation
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "22" # Always use the latest JDK for building
      - name: Load Maven dependencies cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-build-coverage-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install Dependencies
        run: make install
      - name: Generate Docs
        run: make docs
      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs
